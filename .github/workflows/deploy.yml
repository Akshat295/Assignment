name: Deploy API to VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts

      - name: Sync code to VM
        run: |
          rsync -avz --delete \
            -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa" \
            ./ ${{ secrets.VM_USERNAME }}@${{ secrets.VM_HOST }}:/home/${{ secrets.VM_USERNAME }}/app/

      - name: Configure Firewall on VM to Allow HTTP Traffic (Port 80)
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.VM_USERNAME }}@${{ secrets.VM_HOST }} << 'EOF'
            sudo ufw allow 80/tcp
            sudo ufw reload
            sudo ufw status
          EOF

      - name: Deploy on VM
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.VM_USERNAME }}@${{ secrets.VM_HOST }} << 'EOF'
            set -e
            cd ~/app

            # Download and extract Node.js locally if not present
            if [ ! -d "node-v18.16.0-linux-x64" ]; then
              curl -O https://nodejs.org/dist/v18.16.0/node-v18.16.0-linux-x64.tar.xz
              tar -xf node-v18.16.0-linux-x64.tar.xz
            fi

            export PATH="$PWD/node-v18.16.0-linux-x64/bin:$PATH"

            echo "Using Node.js version: $(node -v)"
            echo "Using npm version: $(npm -v)"

            npm install --no-audit --no-fund

            if [ ! -d "node_modules/pm2" ]; then
              npm install pm2
            fi

            npx pm2 delete sayHelloAPI || true
            npx pm2 start server.js --name sayHelloAPI
            npx pm2 save
          EOF
